---
import DefaultLayout from "../layouts/DefaultLayout.astro";
import StephanusPage from "../components/StephanusPage.astro";

import { getEntry } from "astro:content";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import { symbolName } from "typescript";
import { any, array } from "astro/zod";
const alcibiades = await getEntry("dialogs", "Alcibiades_a/Original");
const blondell = await getEntry("dialogs", "Alcibiades_a/Blondell");
const dialogs = await getCollection("dialogs");
const Alcibiades_a = await getCollection("dialogs", ({ id }) => {
	return id.startsWith("Alcibiades_a");
});

// console.log(alcibiades.data);

const getDialogs = (query: string, suffix?: string) =>
	dialogs.filter(({ id }) => {
		return suffix ? id.match(query + "/" + suffix) : id.startsWith(query);
	});

const getDialog = (query: string, suffix: string) =>
	dialogs.find(({ id }) => id.match(query + "/" + suffix));

var options = {};
dialogs.forEach(({ id }) => {
	var parts = ((a) => ({ dialog: a[0], author: a[1] }))(id.split("/"));
	if (!Object.hasOwn(options, parts.dialog)) {
		Object.defineProperty(options, parts.dialog, {
			value: [],
			enumerable: true,
		});
	}
	var tmp: Object[] = Object.getOwnPropertyDescriptor(
		options,
		parts.dialog,
	)?.value;
	tmp.push(parts.author);
});
---

<div id="search" slot="search">
	<label for="search">Search: </label>
	<input type="text" name="search" />
	<label for="dialogs">Dialogs</label>
	<select name="dialogs">
		<option selected>--</option>
		{
			Object.entries(options).map(([key, val]: [string, any]) => (
				<optgroup label={key}>
					{Object.entries(val).map(([, val]: [string, any]) => (
						<option>
							{key}/{val}
						</option>
					))}
				</optgroup>
			))
		}
	</select>
</div>
<DefaultLayout>
	<div id="page_1">
		<StephanusPage
			collection={getDialogs("Alcibiades_a", "Original")[0].data}
		/>
	</div>
	<div id="page_2">
		<StephanusPage
			collection={getDialogs("Alcibiades_a", "Blondell")[0].data}
		/>
	</div>
</DefaultLayout>
